// source: grpc_server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.grpc_server.CreateGamePartialUpdateRequest', null, global);
goog.exportSymbol('proto.grpc_server.CreateGameRequest', null, global);
goog.exportSymbol('proto.grpc_server.CreateGameRequestUserInfo', null, global);
goog.exportSymbol('proto.grpc_server.CreateMoveRequest', null, global);
goog.exportSymbol('proto.grpc_server.GameResponse', null, global);
goog.exportSymbol('proto.grpc_server.MoveResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.CreateGameRequestUserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc_server.CreateGameRequestUserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.CreateGameRequestUserInfo.displayName = 'proto.grpc_server.CreateGameRequestUserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.CreateGamePartialUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc_server.CreateGamePartialUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.CreateGamePartialUpdateRequest.displayName = 'proto.grpc_server.CreateGamePartialUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.CreateGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc_server.CreateGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.CreateGameRequest.displayName = 'proto.grpc_server.CreateGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.GameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc_server.GameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.GameResponse.displayName = 'proto.grpc_server.GameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.CreateMoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc_server.CreateMoveRequest.repeatedFields_, null);
};
goog.inherits(proto.grpc_server.CreateMoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.CreateMoveRequest.displayName = 'proto.grpc_server.CreateMoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc_server.MoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc_server.MoveResponse.repeatedFields_, null);
};
goog.inherits(proto.grpc_server.MoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc_server.MoveResponse.displayName = 'proto.grpc_server.MoveResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.CreateGameRequestUserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.CreateGameRequestUserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGameRequestUserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.CreateGameRequestUserInfo}
 */
proto.grpc_server.CreateGameRequestUserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.CreateGameRequestUserInfo;
  return proto.grpc_server.CreateGameRequestUserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.CreateGameRequestUserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.CreateGameRequestUserInfo}
 */
proto.grpc_server.CreateGameRequestUserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.CreateGameRequestUserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.CreateGameRequestUserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGameRequestUserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGameRequestUserInfo} returns this
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.CreateGameRequestUserInfo} returns this
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.CreateGameRequestUserInfo} returns this
 */
proto.grpc_server.CreateGameRequestUserInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.CreateGamePartialUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.CreateGamePartialUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGamePartialUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    winner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useronepoints: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    usertwopoints: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.CreateGamePartialUpdateRequest;
  return proto.grpc_server.CreateGamePartialUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.CreateGamePartialUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWinner(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUseronepoints(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUsertwopoints(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.CreateGamePartialUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.CreateGamePartialUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGamePartialUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWinner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseronepoints();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getUsertwopoints();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest} returns this
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string winner = 2;
 * @return {string}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.getWinner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest} returns this
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.setWinner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double userOnePoints = 3;
 * @return {number}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.getUseronepoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest} returns this
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.setUseronepoints = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double userTwoPoints = 4;
 * @return {number}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.getUsertwopoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest} returns this
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.setUsertwopoints = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.CreateGamePartialUpdateRequest} returns this
 */
proto.grpc_server.CreateGamePartialUpdateRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.CreateGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.CreateGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.CreateGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userone: jspb.Message.getFieldWithDefault(msg, 1, 0),
    usertwo: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.CreateGameRequest}
 */
proto.grpc_server.CreateGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.CreateGameRequest;
  return proto.grpc_server.CreateGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.CreateGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.CreateGameRequest}
 */
proto.grpc_server.CreateGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserone(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUsertwo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.CreateGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.CreateGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.CreateGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserone();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUsertwo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 userOne = 1;
 * @return {number}
 */
proto.grpc_server.CreateGameRequest.prototype.getUserone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGameRequest} returns this
 */
proto.grpc_server.CreateGameRequest.prototype.setUserone = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 userTwo = 2;
 * @return {number}
 */
proto.grpc_server.CreateGameRequest.prototype.getUsertwo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateGameRequest} returns this
 */
proto.grpc_server.CreateGameRequest.prototype.setUsertwo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.GameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.GameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.GameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.GameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    useroneinfo: (f = msg.getUseroneinfo()) && proto.grpc_server.CreateGameRequestUserInfo.toObject(includeInstance, f),
    usertwoinfo: (f = msg.getUsertwoinfo()) && proto.grpc_server.CreateGameRequestUserInfo.toObject(includeInstance, f),
    useroneturn: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    winner: jspb.Message.getFieldWithDefault(msg, 5, ""),
    useronepoints: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    usertwopoints: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    startat: jspb.Message.getFieldWithDefault(msg, 8, ""),
    finishat: jspb.Message.getFieldWithDefault(msg, 9, ""),
    status: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.GameResponse}
 */
proto.grpc_server.GameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.GameResponse;
  return proto.grpc_server.GameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.GameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.GameResponse}
 */
proto.grpc_server.GameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.grpc_server.CreateGameRequestUserInfo;
      reader.readMessage(value,proto.grpc_server.CreateGameRequestUserInfo.deserializeBinaryFromReader);
      msg.setUseroneinfo(value);
      break;
    case 3:
      var value = new proto.grpc_server.CreateGameRequestUserInfo;
      reader.readMessage(value,proto.grpc_server.CreateGameRequestUserInfo.deserializeBinaryFromReader);
      msg.setUsertwoinfo(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseroneturn(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWinner(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUseronepoints(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUsertwopoints(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinishat(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.GameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.GameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.GameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.GameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUseroneinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grpc_server.CreateGameRequestUserInfo.serializeBinaryToWriter
    );
  }
  f = message.getUsertwoinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grpc_server.CreateGameRequestUserInfo.serializeBinaryToWriter
    );
  }
  f = message.getUseroneturn();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWinner();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUseronepoints();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getUsertwopoints();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getStartat();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFinishat();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc_server.GameResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CreateGameRequestUserInfo userOneInfo = 2;
 * @return {?proto.grpc_server.CreateGameRequestUserInfo}
 */
proto.grpc_server.GameResponse.prototype.getUseroneinfo = function() {
  return /** @type{?proto.grpc_server.CreateGameRequestUserInfo} */ (
    jspb.Message.getWrapperField(this, proto.grpc_server.CreateGameRequestUserInfo, 2));
};


/**
 * @param {?proto.grpc_server.CreateGameRequestUserInfo|undefined} value
 * @return {!proto.grpc_server.GameResponse} returns this
*/
proto.grpc_server.GameResponse.prototype.setUseroneinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.clearUseroneinfo = function() {
  return this.setUseroneinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpc_server.GameResponse.prototype.hasUseroneinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CreateGameRequestUserInfo userTwoInfo = 3;
 * @return {?proto.grpc_server.CreateGameRequestUserInfo}
 */
proto.grpc_server.GameResponse.prototype.getUsertwoinfo = function() {
  return /** @type{?proto.grpc_server.CreateGameRequestUserInfo} */ (
    jspb.Message.getWrapperField(this, proto.grpc_server.CreateGameRequestUserInfo, 3));
};


/**
 * @param {?proto.grpc_server.CreateGameRequestUserInfo|undefined} value
 * @return {!proto.grpc_server.GameResponse} returns this
*/
proto.grpc_server.GameResponse.prototype.setUsertwoinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.clearUsertwoinfo = function() {
  return this.setUsertwoinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grpc_server.GameResponse.prototype.hasUsertwoinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool userOneTurn = 4;
 * @return {boolean}
 */
proto.grpc_server.GameResponse.prototype.getUseroneturn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setUseroneturn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string winner = 5;
 * @return {string}
 */
proto.grpc_server.GameResponse.prototype.getWinner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setWinner = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double userOnePoints = 6;
 * @return {number}
 */
proto.grpc_server.GameResponse.prototype.getUseronepoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setUseronepoints = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double userTwoPoints = 7;
 * @return {number}
 */
proto.grpc_server.GameResponse.prototype.getUsertwopoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setUsertwopoints = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string startAt = 8;
 * @return {string}
 */
proto.grpc_server.GameResponse.prototype.getStartat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setStartat = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string finishAt = 9;
 * @return {string}
 */
proto.grpc_server.GameResponse.prototype.getFinishat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setFinishat = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string status = 10;
 * @return {string}
 */
proto.grpc_server.GameResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc_server.GameResponse} returns this
 */
proto.grpc_server.GameResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc_server.CreateMoveRequest.repeatedFields_ = [4,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.CreateMoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.CreateMoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.CreateMoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateMoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    game: jspb.Message.getFieldWithDefault(msg, 1, 0),
    user: jspb.Message.getFieldWithDefault(msg, 2, 0),
    checkerid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    newpositionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    isking: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    iswhite: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isdead: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    killedList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.CreateMoveRequest}
 */
proto.grpc_server.CreateMoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.CreateMoveRequest;
  return proto.grpc_server.CreateMoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.CreateMoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.CreateMoveRequest}
 */
proto.grpc_server.CreateMoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGame(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCheckerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewpositions(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsking(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswhite(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdead(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addKilled(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.CreateMoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.CreateMoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.CreateMoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.CreateMoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGame();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCheckerid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNewpositionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIsking();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIswhite();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsdead();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getKilledList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 game = 1;
 * @return {number}
 */
proto.grpc_server.CreateMoveRequest.prototype.getGame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setGame = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user = 2;
 * @return {number}
 */
proto.grpc_server.CreateMoveRequest.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 checkerId = 3;
 * @return {number}
 */
proto.grpc_server.CreateMoveRequest.prototype.getCheckerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setCheckerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string newPositions = 4;
 * @return {!Array<string>}
 */
proto.grpc_server.CreateMoveRequest.prototype.getNewpositionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setNewpositionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.addNewpositions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.clearNewpositionsList = function() {
  return this.setNewpositionsList([]);
};


/**
 * optional bool isKing = 5;
 * @return {boolean}
 */
proto.grpc_server.CreateMoveRequest.prototype.getIsking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setIsking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool isWhite = 6;
 * @return {boolean}
 */
proto.grpc_server.CreateMoveRequest.prototype.getIswhite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setIswhite = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool isDead = 7;
 * @return {boolean}
 */
proto.grpc_server.CreateMoveRequest.prototype.getIsdead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setIsdead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated int32 killed = 8;
 * @return {!Array<number>}
 */
proto.grpc_server.CreateMoveRequest.prototype.getKilledList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.setKilledList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.addKilled = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc_server.CreateMoveRequest} returns this
 */
proto.grpc_server.CreateMoveRequest.prototype.clearKilledList = function() {
  return this.setKilledList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc_server.MoveResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc_server.MoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc_server.MoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc_server.MoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.MoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    game: jspb.Message.getFieldWithDefault(msg, 2, 0),
    user: jspb.Message.getFieldWithDefault(msg, 3, 0),
    checkerid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    newpositionsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    isking: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    iswhite: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isdead: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    islastmove: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc_server.MoveResponse}
 */
proto.grpc_server.MoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc_server.MoveResponse;
  return proto.grpc_server.MoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc_server.MoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc_server.MoveResponse}
 */
proto.grpc_server.MoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGame(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCheckerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewpositions(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsking(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswhite(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdead(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslastmove(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc_server.MoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc_server.MoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc_server.MoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc_server.MoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGame();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCheckerid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNewpositionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getIsking();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIswhite();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsdead();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIslastmove();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc_server.MoveResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 game = 2;
 * @return {number}
 */
proto.grpc_server.MoveResponse.prototype.getGame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setGame = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user = 3;
 * @return {number}
 */
proto.grpc_server.MoveResponse.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 checkerId = 4;
 * @return {number}
 */
proto.grpc_server.MoveResponse.prototype.getCheckerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setCheckerid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string newPositions = 5;
 * @return {!Array<string>}
 */
proto.grpc_server.MoveResponse.prototype.getNewpositionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setNewpositionsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.addNewpositions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.clearNewpositionsList = function() {
  return this.setNewpositionsList([]);
};


/**
 * optional bool isKing = 6;
 * @return {boolean}
 */
proto.grpc_server.MoveResponse.prototype.getIsking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setIsking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool isWhite = 7;
 * @return {boolean}
 */
proto.grpc_server.MoveResponse.prototype.getIswhite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setIswhite = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool isDead = 8;
 * @return {boolean}
 */
proto.grpc_server.MoveResponse.prototype.getIsdead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setIsdead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool isLastMove = 9;
 * @return {boolean}
 */
proto.grpc_server.MoveResponse.prototype.getIslastmove = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc_server.MoveResponse} returns this
 */
proto.grpc_server.MoveResponse.prototype.setIslastmove = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


goog.object.extend(exports, proto.grpc_server);
